---
- name: Deploy rqlite cluster
  hosts: all
  become: yes
  vars:
    rqlite_version: "v8.36.4"
    rqlite_install_dir: "/opt/rqlite"
    zinit_services_dir: "/etc/zinit"
    cluster_nodes: "{{ groups['all'] }}"  # List of all hosts in the inventory
    node_id: "{{ play_hosts.index(inventory_hostname) + 1 }}"
    service_host: "{{ inventory_hostname }}"

  tasks:
    - name: Ensure installation directory exists
      file:
        path: "{{ rqlite_install_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Download rqlite binary
      get_url:
        url: "https://github.com/rqlite/rqlite/releases/download/{{ rqlite_version }}/rqlite-{{ rqlite_version }}-linux-amd64.tar.gz"
        dest: "/tmp/rqlite-{{ rqlite_version }}-linux-amd64.tar.gz"
        mode: '0644'

    - name: Extract rqlite binary
      unarchive:
        src: "/tmp/rqlite-{{ rqlite_version }}-linux-amd64.tar.gz"
        dest: "{{ rqlite_install_dir }}"
        remote_src: yes
        extra_opts: "--strip-components=1"

    - name: Ensure zinit services directory exists
      file:
        path: "{{ zinit_services_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create zinit service file for rqlite
      copy:
        dest: "{{ zinit_services_dir }}/rqlite.yaml"
        content: |
          exec: {{ rqlite_install_dir }}/rqlited
            -node-id {{ node_id }}
            -http-addr {{ service_host }}:4001
            -raft-addr {{ service_host }}:4002
            -bootstrap-expect 3
            -join {{ cluster_nodes | map('regex_replace', '^', service_host + ':4002') | join(',') }}
            {{ rqlite_install_dir }}/node
        owner: root
        group: root
        mode: '0644'

    - name: Start rqlite service with zinit
      command: zinit monitor rqlite
      changed_when: false
